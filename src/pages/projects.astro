---
import Layout from "../layouts/BaseLayout.astro";
import ProjectItem from "../components/ProjectItem.astro";

const accent = "#c62828"; // sama kuin --accent-red
const bg = "#faf8f4"; // sama kuin --color-bg
---

<Layout
  title="Projects"
  description="A selection of personal and professional projects — from games to browser tools and web apps."
  pageClass="page-red"
>
  <h1>Projects</h1>

  <p>A few selected personal and professional projects.</p>

  <hr />
  <ProjectItem title="Consent Analyser" tech={["JavaScript", "HTML", "CSS"]}>
    <p>Chrome extension that:</p>
    <ul>
      <li>
        Checks if Consent Management Platform is correctly linked to Shopify's
        Customer Privacy API and respecting user's choices
      </li>
      <li>Inspects dataLayer pushes for debugging analytics</li>
      <li>Lets user change consent easily</li>
    </ul>
    <p>
      No public code available since it's made at work and for work. If you're
      interested, email me for a demo :)
    </p>

    <img
      slot="visual"
      class="project-image"
      src="/consent_analyser_screenshot.png"
      alt="Screenshot of Consent Analyser"
      width="100%"
      height="auto"
    />
  </ProjectItem>

  <hr />

  <ProjectItem
    title="Kandi Rush Saga"
    reverse={true}
    tech={["JavaScript", "Phaser"]}
  >
    <p>
      A very serious browser game: earn 180 student credits before you run out
      of allowance months. Watch out for Plagiointisyytös and unexpected Moodle
      outages.
    </p>
    <p>
      <strong>Code:</strong>
      <a href="https://github.com/succabs/kandirushsaga">GitHub</a>
    </p>
    <img
      slot="visual"
      class="project-image"
      src="/kandirushsaga_screenshot.png"
      alt="Screenshot of Kandi Rush Saga"
      width="100%"
      height="auto"
    />
  </ProjectItem>

  <hr />

  <ProjectItem
    title="Pitmaster"
    tech={["Svelte", "TailwindCSS", "ExpressJS", "PostgreSQL", "VPS"]}
  >
    <p>Gladiator manager web game inspired by Areena 5 and Travian.</p>
    <p>
      This is an ongoing project to evaluate how well Codex & Cursor perform on
      a project from start to finish: Vibe coded all the way. The idea is old,
      never had time to execute it before AI tools.
    </p>
    <p>
      Front-end logic is ready, back-end and graphics are a work in progress.
    </p>
    <img
      slot="visual"
      class="project-image"
      src="/pitmaster_screenshot.png"
      alt="Screenshot of Pitmaster"
      width="100%"
      height="auto"
    />
  </ProjectItem>
</Layout>
<div id="image-modal" class="image-modal">
  <div class="modal-backdrop"></div>
  <span class="modal-close">&times;</span>
  <img class="modal-content" id="modal-image" />
</div>

<script>
  window.requestAnimationFrame(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
          }
        });
      },
      {
        threshold: 0.6,
      }
    );

    document.querySelectorAll(".project-svg, .project-image").forEach((el) => {
      observer.observe(el);
    });
  });
  const modal = document.getElementById("image-modal");
  const modalImg = document.getElementById("modal-image");
  const closeBtn = document.querySelector(".modal-close");

  document.querySelectorAll(".project-image").forEach((img) => {
    img.addEventListener("click", () => {
      modal.classList.add("show");
      modalImg.src = img.src;
      modalImg.alt = img.alt;
      document.documentElement.classList.add("modal-open");
      document.body.classList.add("modal-open");
    });
  });

  function closeModal() {
    modal.classList.remove("show");
    document.documentElement.classList.remove("modal-open");
    document.body.classList.remove("modal-open");
  }

  closeBtn.addEventListener("click", closeModal);

  modal.addEventListener("click", (e) => {
    if (e.target === modal) {
      closeModal();
    }
  });
  document
    .querySelector(".modal-backdrop")
    .addEventListener("click", closeModal);
</script>
<style>
  .project-svg {
    width: 120px;
    height: 120px;
    opacity: 0;
    transform: translateY(20px) scale(0.95);
    transition: all 0.6s ease-out;
  }

  .project-svg.visible {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  .project-image {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
    transition: all 0.6s ease-out;
    max-width: 100%;
    height: auto;
  }

  .project-image.visible {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  .project-image {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
    transition: all 0.6s ease-out;
    max-width: 100%;
    cursor: zoom-in;
    border-radius: 4px;
  }

  .project-image.visible {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  .image-modal {
    display: none;
    position: fixed;
    inset: 0;
    z-index: 9999;
    align-items: center;
    justify-content: center;
  }

  .image-modal.show {
    display: flex;
  }

  .modal-backdrop {
    position: absolute;
    inset: 0;
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    background-color: rgba(255, 255, 255, 0.05); /* kevyt huntu */
    z-index: 1;
  }

  .modal-content {
    max-width: 90vw;
    max-height: 80vh;
    border-radius: 8px;
    z-index: 2;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);
  }

  .modal-close {
    position: absolute;
    top: 24px;
    right: 32px;
    color: black;
    font-size: 3rem;
    font-weight: bold;
    cursor: pointer;
    user-select: none;
    z-index: 3;
  }

  body.modal-open,
  html.modal-open {
    overflow: hidden;
    height: 100%;
  }
</style>
