---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
  const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );
  const colors = ["blue", "red"];
  return posts.map((post, idx) => ({
    params: { slug: post.id },
    props: { ...post, color: colors[idx % colors.length] },
  }));
}

type PostWithColor = CollectionEntry<"blog"> & {
  color: "red" | "blue";
};

const post = Astro.props as PostWithColor;

const { Content } = await render(post);
const rawBody = post.body!;

const wordsPerMinute = 200;
const wordCount = rawBody.trim().split(/\s+/).length;
const readTime = Math.max(1, Math.round(wordCount / wordsPerMinute));
---

<BlogPost {...post.data} color={post.color} readTime={readTime}>
  <Content />
</BlogPost>
