---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import { Image } from "astro:assets";
import ScrollTopButton from "../../components/ScrollTopButton.astro";

const wordsPerMinute = 200;

const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .map((post) => {
    const wordCount = post.body?.trim().split(/\s+/).length ?? 0;
    const readTime = Math.max(1, Math.round(wordCount / wordsPerMinute));
    return {
      ...post,
      data: {
        ...post.data,
        readTime,
      },
    };
  });

const postColors = ["blue", "red", "yellow"];
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      main {
        max-width: var(--max-width);
        margin-inline: auto;
        padding-inline: 64px;
        margin-block: 64px;
      }

      @media (max-width: 720px) {
        main {
          padding-inline: 32px;
        }
      }

      ul {
        display: flex;
        flex-wrap: wrap;
        gap: 64px;
        list-style-type: none;
        padding: 0;
        margin: 0;
      }

      ul li {
        width: calc(50% - 32px);
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        text-align: left;
      }

      ul li:first-child {
        width: 100%;
        text-align: center;
      }

      ul li:first-child img {
        width: 100%;
        height: auto;
        object-fit: cover;
        aspect-ratio: 16 / 9;
        margin-bottom: 1rem;
      }

      ul li:first-child .title {
        font-size: clamp(36px, 4vw, 56px);
        font-weight: 700;
        font-family: var(--font-heading);
      }

      .title {
        margin: 0.5rem 0 0.25rem;
        font-size: 24px;
        font-weight: 600;
        font-family: var(--font-heading);
        color: var(--accent);
        line-height: 1.2;
      }

      .date {
        font-size: 14px;
        color: var(--accent);
        margin: 0;
      }

      ul li a {
        text-decoration: none;
        color: inherit;
        display: block;
        width: 100%;
      }

      ul li img {
        width: 100%;
        height: auto;
        aspect-ratio: 16 / 9;
        object-fit: cover;
        margin-bottom: 1rem;
      }

      ul li a:hover .title {
        color: var(--accent);
      }

      ul li a:hover .date {
        color: var(--accent);
      }

      .post-red {
        --accent: var(--accent-red);
      }

      .post-blue {
        --accent: var(--accent-blue);
      }

      .post-yellow {
        --accent: var(--accent-yellow);
      }

      @media (max-width: 720px) {
        ul {
          gap: 32px;
        }

        ul li {
          width: 100%;
          text-align: left;
          align-items: flex-start;
        }

        ul li:first-child .title {
          font-size: 32px;
        }
      }

      .posts-list {
        display: flex;
        flex-direction: column;
        gap: 4rem;
        margin-top: 2rem;
      }

      .post-item {
        padding-bottom: 2rem;
        border-bottom: 1px solid var(--accent);
      }

      .post-title {
        font-family: var(--font-heading);
        font-size: 2rem;
        font-weight: 700;
        text-transform: uppercase;
        margin: 1rem 0 0.5rem;
      }

      .post-title a {
        color: var(--accent);
        text-decoration: none;
      }

      .post-title a:hover {
        text-decoration: underline;
      }

      .post-date {
        font-family: var(--font-mono, monospace);
        font-size: 0.85rem;
        color: var(--accent);
        text-transform: uppercase;
        letter-spacing: 0.05em;
        margin-bottom: 1rem;
      }

      .post-excerpt {
        font-size: 1rem;
        color: var(--color-text, #333);
        line-height: 1.6;
        margin-bottom: 1rem;
      }

      .read-more {
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.04em;
        color: var(--accent);
        text-decoration: none;
      }

      .read-more:hover {
        color: var(--color-text);
      }
    </style>
  </head>
</html>
<body class="page-blog page-red">
  <Header />
  <main class="content">
    <div class="corner-decoration top-left"></div>
    <div class="corner-decoration top-right"></div>
    <h1>Blog index</h1>
    <section class="posts-list">
      {
        posts.map((post, idx) => (
          <article
            class={`post-item post-${postColors[idx % postColors.length]}`}
          >
            <h2 class="post-title">
              <a href={`/blog/${post.id}/`}>{post.data.title}</a>
            </h2>

            {post.data.excerpt && (
              <p class="post-excerpt">{post.data.excerpt}</p>
            )}
            <p class="post-date">
              <FormattedDate date={post.data.pubDate} />
              <span class="read-time"> • {post.data.readTime} min read</span>
            </p>
            <a href={`/blog/${post.id}/`} class="read-more">
              Read More →
            </a>
          </article>
        ))
      }
    </section>
  </main>
  <Footer />
  <ScrollTopButton />

  <script type="module">
    if (typeof window !== "undefined") {
      const pageMap = {
        "/": "home",
        "/experience": "experience",
        "/projects": "projects",
        "/skills": "skills",
        "/about": "about",
        "/blog": "blog",
      };

      const path = window.location.pathname.replace(/\/$/, "");
      const key = pageMap[path];

      if (key) {
        const storageKey = "visitedPages";
        const stored = JSON.parse(localStorage.getItem(storageKey) || "{}");
        stored[key] = true;
        localStorage.setItem(storageKey, JSON.stringify(stored));
      }
    }
  </script>
</body>
