---
interface Props {
  title: string;
  tech?: string[];
  reverse?: boolean;
}
const { title, tech = [], reverse = false } = Astro.props;
---

<section class={`project-section ${reverse ? "reverse" : ""}`}>
  <div class="project-text">
    <h2>{title}</h2>
    <slot />
    {
      tech.length > 0 && (
        <div class="tag-list">
          {tech.map((t) => (
            <span class="tag">{t}</span>
          ))}
        </div>
      )
    }
  </div>
  <div class="project-visual">
    <slot name="visual" />
  </div>
</section>

<style>
  .project-section {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    margin-block: 4rem;
    align-items: center;
  }

  .project-section.reverse {
    direction: rtl;
  }
  .project-section.reverse > * {
    direction: ltr;
  }

  .project-text {
    max-width: 65ch;
  }

  .project-visual {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .project-svg {
    width: 120px;
    height: 120px;
  }

  .tag-list {
    margin-top: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  .tag {
    background: var(--accent);
    color: white;
    font-size: 0.75rem;
    padding: 0.3em 0.75em;
    white-space: nowrap;
  }

  @media (max-width: 720px) {
    .project-section,
    .project-section.reverse {
      grid-template-columns: 1fr;
      direction: ltr;
    }
  }
  .project-svg {
    width: 120px;
    height: 120px;
    opacity: 0;
    transform: translateY(20px) scale(0.95);
    transition: all 0.6s ease-out;
  }

  .project-svg.visible {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
</style>
