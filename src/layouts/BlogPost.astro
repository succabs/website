---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";
import ScrollTopButton from "../components/ScrollTopButton.astro";

type Props = CollectionEntry<"blog">["data"] & {
  readTime: number;
  color: "red" | "blue";
};

const { title, description, pubDate, updatedDate, heroImage, color, readTime } =
  Astro.props as Props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      article {
        max-width: var(--max-width);
        margin-inline: auto;
        padding-inline: 64px;
      }

      @media (max-width: 720px) {
        article {
          padding-inline: 0px;
        }
      }

      .hero-image {
        margin-bottom: 2em;
      }

      .hero-image img {
        display: block;
        margin-inline: auto;
        width: 100%;
        height: auto;
        aspect-ratio: 16 / 9;
        object-fit: cover;
      }

      .prose {
        font-family: var(--font-body);
        font-size: 18px;
        line-height: 1.7;
        color: var(--color-text);
        max-width: 65ch;
        margin: 0 auto;
      }

      .title {
        text-align: center;
        margin-bottom: 2rem;
      }

      .title h1 {
        font-family: var(--font-heading);
        font-size: clamp(2rem, 5vw, 4rem);
        font-weight: 700;
        margin-bottom: 0.5em;
        line-height: 1.1;
        text-align: left;
        height: auto;
        margin-top: 1em;
      }

      .date {
        color: var(--color-text);
        font-size: 14px;
        margin-bottom: 0.25em;
      }

      .last-updated-on {
        font-style: italic;
        font-size: 13px;
        color: var(--color-text);
      }

      p {
        margin-bottom: 1.5em;
      }

      h2,
      h3 {
        font-family: var(--font-heading);
        font-weight: 600;
        margin-top: 2.5em;
        margin-bottom: 0.5em;
        line-height: 1.3;
        color: var(--color-text);
      }

      h2 {
        font-size: clamp(1.5rem, 4vw, 2.5rem);
      }

      h3 {
        font-size: 24px;
      }

      a {
        color: var(--accent);
        text-decoration: none;
        border-bottom: 2px solid var(--accent);
      }

      a:hover {
        text-decoration: underline;
      }

      blockquote {
        border-left: 6px solid var(--accent);
        padding-left: 1em;
        margin-block: 2em;
        font-style: italic;
        font-size: 1.1em;
      }

      pre {
        background-color: var(--color-gray);
        color: black;
        padding: 1em;
        overflow-x: auto;
        font-size: 0.9em;
        margin-block: 2em;
      }

      code {
        background-color: var(--color-gray);
        padding: 0.2em 0.5em;
      }

      ul,
      ol {
        padding-left: 1.5em;
        margin-bottom: 2em;
      }

      li {
        margin-bottom: 0.5em;
      }
      .back-to-index {
        text-align: center;
        margin-top: 4rem;
      }

      .back-to-index a {
        font-family: var(--font-heading);
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        color: var(--accent);
        text-decoration: none;
        border: 2px solid var(--accent);
        padding: 0.5em 1em;
        display: inline-block;
        transition:
          background 0.2s ease,
          color 0.2s ease;
      }

      .back-to-index a:hover {
        background: var(--accent);
        color: var(--color-bg);
      }
    </style>
  </head>
</html>

<body class={"page-blog page-" + color}>
  <Header />
  <main class="content">
    <article>
      <div class="hero-image">
        {
          heroImage && (
            <Image width={1020} height={510} src={heroImage} alt="" />
          )
        }
      </div>
      <div class="prose">
        <div class="title">
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
            <span class="read-time"> • {readTime} min read</span>
          </div>
          <h1>{title}</h1>
          <hr />
        </div>
        <slot />
      </div>
      <div class="back-to-index">
        <a href="/blog">← Back to blog index</a>
      </div>
    </article>
  </main>
  <Footer />
  <ScrollTopButton />
</body>
